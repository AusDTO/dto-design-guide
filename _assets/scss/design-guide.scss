$lighter-grey:    lighten($grey, 48%);

$spacing-double: ($base-spacing * 2);
$spacing-three-quarter: ($medium-spacing + $small-spacing);
$spacing-half: $medium-spacing;
$spacing-quarter: $small-spacing;
$spacing-eighth: $tiny-spacing;

$guide-eg-border-width: 7px;

// Something for uikit?
%base-border {
  border: 1px solid $border-colour;
  border-radius: $base-border-radius;
}

%scrolling-example {
  width: 100%;
}

table {
  margin-bottom: $base-spacing * 2;
}

// Some spritesheet svg/png icon things.
//
// The class implementation here could be buggy -- might need to target the SVGs
// directly.
.icon-inline {
  margin-right: $tiny-spacing;
}

.fa-envelope-o {
  width: rem(22);
  height: rem(17);
  vertical-align: middle;
}

.fa-github {
  width: rem(22);
  height: rem(22);
  vertical-align: text-bottom;
}

// Custom styling for the inverted feedback button in the header.
// This will likely be removed/replaced by a global site search.
// The @extend .inverted is not working in:
// https://github.com/AusDTO/gov-au-ui-kit/blob/master/assets/sass/components/_page-header.scss#L288

header[role='banner'] {
  .page-header {
    padding-top: 0;
  }

  .page-header__logo {
    padding-top: 0;
    margin-bottom: $tiny-spacing;

    @include media($tablet) {
      height: rem(132);
      margin-bottom: 0;
    }

    .logo {
      display: inline-block;
      position: relative;
      border-bottom: none;

      &:hover,
      &:focus {
        background-color: transparent;
      }

      svg {
        position: absolute;
        top: 0;
        width: rem(48);
        height: auto;

        @include media($tablet) {
          width: rem(64);
        }
      }

      span {
        display: inline-block;
        margin-top: rem(50);
        margin-left: rem(60);

        @include media($tablet) {
          margin-top: rem(50);
          margin-left: rem(80);
        }

        &:hover,
        &:focus {
          background-color: $light-aqua;
          color: $link-colour;
        }
      }
    }
  }

  .badge--default {
    display: inline-block;
    margin-left: 0.5em;
    vertical-align: super;

    // I feel a bit dirty too, but hey -- this lets the badge wrap nicely.
    @include media(min-width 300px max-width 410px) {
      margin: $small-spacing 0 0 rem(60);
    }
  }

  .breadcrumbs {
    background-color: $background-colour;
  }

  .feedback {
    @include button-colours(transparent, $button-bg-colour--hover, $button-bg-colour--active, $button-bg-colour--hover, $button-text-colour);

    display: block;
    float: none;
    margin-top: $base-spacing;
    margin-left: 0;

    @include media($tablet) {
      float: none;
      margin-left: 0;
    }
  }
}

main {
  header {
    h1 {
      .guide-title {
        display: block;
        font-size: rem(15);
        font-weight: normal;
        color: $grey;

        @include media($tablet) {
          font-size: rem(16);
        }

        @include media($desktop) {
          font-size: rem(17);
        }
      }
    }
  }

  // This gives us a little pilcrow (trad. paragraph marker) to the left of any
  // h2s that have an ID and contain an anchor with the .headline-slug-link
  // class on hover.
  //
  // This feature is used to give users a visual hover effect and hint that the
  // heading has an ID and URL that can be copied to provide a link directly to
  // this heading on the page.
  //
  // Might want to consider moving this into UI-Kit in the future.
  h2[id] {
    // @include clearfix;

    .headline-slug-link {
      border-bottom: none;
      position: relative;

      &:hover {
        border-bottom: none;
        background-color: $background-colour;

        &:after {
          content: '\00B6'; // pilcrow character
          position: absolute;
          width: rem(24);
          left: -(rem(24));
          top: 0.5em;
          font-size: $smaller-font-size;
          color: $grey;
        }
      }
    }
  }

  .back-to-index-link {
    display: block;
    font-size: $small-font-size;
    float: right;
    margin-top: rem(82);
  }

  // Custom styling for sidebar
  //
  // We are hard-coding these % values from Neat results of the this grid setup.
  // We are doing this to get the sidebar floated to the left, w/ the right.
  // of margins.
  //
  // We should be able to remove this in the future when UI-Kit provides this.

  .sidebar {
    float: left;

    @include media($tablet) {
      margin-left: 0;
      margin-right: 2.74614%;
    }

    @include media($desktop) {
      float: left;
      margin-left: 0;
      margin-right: 2.04556%;
    }
  }
}

// Styling for code blocks outside of the rendered + HTML code examples.
.highlight {
  pre {
    overflow: auto;
    white-space: pre;

    code {
      font-size: rem(14);
    }

    .language-shell {
      display: block;
      margin-bottom: $base-spacing;
      font-size: rem(15);
    }
  }
}


// Custom styling for the rendered example and code blocks.
//
// Extract the repeating bits plz
.guide-example {
  padding-top: 0;

  .guide-example--heading {
    margin: 0;
    display: inline;

    span {
      font-size: $smaller-font-size;
    }
  }

  .guide-example--rendered {
    position: relative;
    border: solid 2px $non-white;
    margin: ($base-spacing * 1.5) 0;
    padding: rem(75) ($medium-spacing + $small-spacing) rem(30) ($medium-spacing + $small-spacing);

    .guide-example--rendered--heading {
      position: absolute;
      top: -22px;
      left: 0;
      font-weight: normal;
      background-color: $non-white;
      font-size: $small-font-size;
      padding: $tiny-spacing $small-spacing;
    }

    // This ensures that we donâ€™t allow rendered examples to overflow their
    // containing boxes.
    .wrapper {
      box-sizing: border-box;
      min-width: 0;
    }
  }

  .highlight {
    border-top-left-radius: $base-border-radius;
    border-top-right-radius: $base-border-radius;

    pre {
      @extend %scrolling-example;

      margin: 0;
      padding-top: $medium-spacing;
      // padding-left: ($medium-spacing + $small-spacing);
      padding-right: $small-spacing;
    }
  }

  // We're making a linting exception here on purpose:
  //
  // This targets the visually hidden skip link rendered example to increase the
  // height of the example space, and to place a message into the space
  // notifying users that the space is intentionally visually empty until
  // manually activated.
  #rendered-skip-links {
    padding-bottom: $base-spacing;

    &:after {
      content: 'This example space contains a visually hidden feature.';
      font-size: $small-font-size;
    }
  }

  .guide-example--code-accordion {
    .accordion-panel {
      background-color: $non-white;
      padding-right: 0;
      padding-left: 0;
      padding-bottom: 0;
    }

    .guide-example--html-copy,
    .guide-example--code {
      margin: 0 $base-spacing;
    }

    .guide-example--html-copy {
      @include button-colours(transparent, $dark-aqua, $dark-aqua, $dark-aqua, $non-white);

      button {
        font-size: $small-font-size;
        border-radius: $base-border-radius;
      }
    }
  }

  .guide-example--meta {
    background-color: $lighter-grey;
    padding: $medium-spacing $base-spacing;

    .guide-example--html-copy {
      @include button-colours(transparent, $dark-aqua, $dark-aqua, $dark-aqua, $non-white);

      margin-bottom: $small-spacing;

      button {
        border-radius: $base-border-radius;
        font-size: $small-font-size;
      }
    }

    .guide-example--cite {
      font-size: $small-font-size;
    }
  }
}

// Custom styling for the Typography section Typeface eg blocks.
.guide-example--type {
  @extend %scrolling-example;

  margin-bottom: $base-spacing;
  padding: $medium-spacing;
  background-color: $non-white;
  border-radius: $base-border-radius;
  color: $dark-aqua;
  overflow: auto;

  p {
    font-size: 2em;
  }

  :first-child {
    margin-top: 0;
  }

  :last-child {
    margin-bottom: 0;
  }
}

// Custom styling for the accordion
details,
.accordion {
  border-right: 1px solid $border-colour;
  border-left: 1px solid $border-colour;
}

// Custom styling for abstract
//
// This seems defunkt?
p.abstract {
  border-bottom: none;
  padding-bottom: 0;

  @include media($tablet) {
    max-width: 85%;
  }
}

// Custom styling for code examples
.guide-example--code {
  padding-bottom: 1.2em; // not base-spacing?
}

// Custom styling for the Colours section, specifically for the palette.
.guide-colour {
  @extend %base-border;

  float: left;
  width: 43%;
  margin-right: 3%;
  margin-bottom: $gutter;

  @include media($tablet) {
    float: none;
    margin-right: 0;
    @include span-columns(3 of 12);
    @include omega(4n);
  }

  .swatch {
    padding: 45% 0;
    border-bottom: solid 1px $border-colour;
  }

  .text {
    padding: $small-spacing;
    margin: 0;

    small {
      display: block;
      line-height: 1.6;
    }
  }
}

.guide-example--colour {
  @include outer-container;
}

.guide-colour-block {
  padding: $small-spacing $small-spacing $small-spacing $medium-spacing;
  border-radius: $base-border-radius;

  .inverted {
    float: right;
    width: 3.8rem;
    padding: 0 0.5em;
    border-radius: $base-border-radius;
    font-weight: bold;
    letter-spacing: 3px;
    text-align: center;
  }
}

@mixin colour-palette ($fg-colour, $bg-colour) {
  color: $fg-colour;
  background-color: $bg-colour;

  .inverted {
    color: $bg-colour;
    background-color: $fg-colour;
  }
}

.bg-black {
  @include colour-palette($white, $black);
}

.bg-non-black {
  @include colour-palette($non-white, $non-black);
}

.bg-grey {
  @include colour-palette($white, $grey);
}

.bg-light-grey {
  @include colour-palette($non-black, $light-grey);
}

.bg-non-white {
  @include colour-palette($non-black, $non-white);
}

.bg-white {
  @include colour-palette($non-black, $white);
}

.bg-aqua {
  @include colour-palette($non-white, $aqua);
}

.bg-dark-aqua {
  @include colour-palette($non-white, $dark-aqua);
}

.bg-darker-aqua {
  @include colour-palette($non-white, $darker-aqua);
}

.bg-light-aqua {
  @include colour-palette($non-black, $light-aqua);
}

.bg-lighter-aqua {
  @include colour-palette($non-black, $lighter-aqua);
}

.bg-navy {
  @include colour-palette($non-white, $navy);
}

.bg-dark-navy {
  @include colour-palette($non-white, $dark-navy);
}

.bg-maroon {
  @include colour-palette($white, $maroon);
}

.bg-red,
.bg-error-red {
  @include colour-palette($white, $error-colour);
}

.bg-light-red {
  @include colour-palette($error-colour, $light-red);
}

.bg-green,
.bg-success-green {
  @include colour-palette($white, $green);
}

.bg-light-green {
  @include colour-palette($green, $light-green);
}

.bg-yellow,
.bg-warning-yellow {
  background-color: $warning-colour;
}

.bg-light-yellow {
  @include colour-palette($non-black, $light-yellow);
}

.bg-blue,
.bg-info-blue {
  background-color: $blue;
}

.bg-light-blue {
  @include colour-palette($non-black, $light-blue);
}
